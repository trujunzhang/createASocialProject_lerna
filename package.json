{
      "name": "root",
      "private": true,
      "devDependencies": {
            "better-npm-run": "0.1.1",
            "cpx": "1.5.0",
            "npm-run-all": "4.1.5",
            "prettier": "1.16.4",
            "lerna": "3.13.1"
      },
      "scripts": {
            "  ***** clean ****": "",
            "rm.node_module": "lerna clean --yes",
            "rm.defines": "lerna run rm.assets --stream",
            "rm.build": "lerna run  build:reset --stream",
            "rm.defines.pending": "find . -name '@types' -type d | xargs rm -rf",
            "rm.yarn.lock": "find . -name 'yarn.lock' -type f -delete",
            "*****  The following is for lerna ****": "",
            "bootstrap": "lerna bootstrap  --concurrency 30",
            "build": "lerna run build --stream",
            "postinstall": "yarn ready.assets && yarn bootstrap",
        "  *****  The following is ready[All] for apps ****": "",
        "ready.assets": "lerna run ready.assets",
        "ready:test": "yarn ready.web",
        "ready.android": "run-s  ready:android.*",
        "ready:android.simulator": "${ANDROID_SDK_ROOT}/emulator/emulator -avd  genymotion",
        "ready.ios": "run-s  ready:ios.*",
        "ready:ios.simulator": "open -a Simulator",
        "ready.client": "run-s  ready:client.*",
        "ready:client.app": "lerna run ready.client --stream",
        "ready.web": "lerna run ready.web --stream",
            "  *****  The following is for checking apps ****": "",
            "checks": "run-s  check.*",
            "check.client": "echo 'check.client'",
            "check.web": "echo 'check.web'",
            "ts.lints": "run-s  ts.lint.*",
            "ts.lint.client": "echo 'ts.lint.client'",
            "ts.lint.web": "echo 'ts.lint.web'",
            "  *****  The following is ready for tests ****": "",
            "test": "yarn tests && yarn lint",
            "tests": "run-s  test.*",
            "test.global": "yarn ready:test && lerna run test.global --stream",
            "test.primitives": "yarn ready:test && lerna run test.primitives --stream",
            "test.web": "yarn ready:test && lerna run test.web --stream",
            "testx.client": "yarn ready:test && lerna run test.client --stream",
            "test.lib": "yarn ready:test && lerna run test.lib  --stream",
            "test.current": "yarn ready:test && lerna run test.current --stream",
            " *****  The following is for vector icons ****": "",
            "generate.vectors": "lerna run generate.vectors --scope=@app/react-sketch-vector-icons --stream",
            " *****  The following is for sketch app****": "",
            "app:sketch": "lerna run render:all --scope=app-sketch --stream",
            "app:sketch.build": "lerna run build:js --scope=app-sketch --stream",
            "  *****  The following is ready for client ****": "",
            "expo:ios": "lerna run expo:ios --scope=app-client --stream",
            "  *****  The following is for web ****": "",
            "dev-all": "lerna run dev-all --scope=app-web --stream",
            "  *****  The following is for apps ****e": "",
            "fix": "lerna run fix",
            "fix.current": "lerna run fix.current --stream",
            "all:current": "run-s  *.current",
            "build.current": "lerna run build.current --stream",
            "build.current.pending": "lerna run build.current.pending --stream",
            "  *****  The following is demo sketch****": "",
            "demo.sketch.render": "lerna run render --scope=form-validation --stream",
            "  *****  The following is demo nativebase ****": "",
            "demo.nativebase.expo:cache.reset": "watchman watch-del-all && yarn cache clean && lerna run reset:cache --stream",
            "demo.nativebase.expo:ios": "yarn ready.ios && lerna run expo:ios --scope=expo-nativebase-demo --stream",
            "demo.nativebase.expo:android": "yarn ready.android && lerna run expo:android --scope=expo-nativebase-demo --stream",
            "demo.nativebase.expo:sketch": "lerna run render:watch --scope=sketch-nativebase-demo --stream"
      }
}
